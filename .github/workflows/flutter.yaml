name: Flutter
on: [push, pull_request]

permissions:
  contents: write

jobs:
  android:
    strategy:
      matrix:
        arch: [x64]
        channel: [master]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{ matrix.channel }}
          architecture: ${{ matrix.arch }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - run: flutter doctor
      - name: Download dependencies
        run: flutter pub get
      - if: ${{ !github.event.issue.pull_request }}
        name: Set up signing
        env:
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ENCODED_STRING: ${{ secrets.ANDROID_KEYSTORE_FILE }}
        run: |
          echo "$ENCODED_STRING" | base64 -di >upload-keystore.jks
          echo "storePassword=$ANDROID_STORE_PASSWORD" >android/key.properties
          echo "keyPassword=$ANDROID_KEY_PASSWORD" >>android/key.properties
          echo "keyAlias=upload" >>android/key.properties
          echo "storeFile=$(readlink -e .)/upload-keystore.jks" >>android/key.properties
      - if: ${{ !github.event.issue.pull_request }}
        name: Build for Android (release)
        run: |
          flutter build appbundle --release --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          flutter build apk --release --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
      - if: ${{ github.event.issue.pull_request }}
        name: Build for Android (profile)
        run: |
          flutter build appbundle --profile --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          flutter build apk --profile --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
      - if: ${{ !github.event.issue.pull_request }}
        name: Upload Release Android Bundle
        uses: actions/upload-artifact@v3
        with:
          name: com.expidusos.file_manager.apk
          path: build/app/outputs/flutter-apk/app-release.apk
      - if: ${{ github.event.issue.pull_request }}
        name: Upload Profile Android Bundle
        uses: actions/upload-artifact@v3
        with:
          name: com.expidusos.file_manager.apk
          path: build/app/outputs/flutter-apk/app-profile.apk
      - if: ${{ !github.event.issue.pull_request && !startsWith(github.ref, 'refs/tags/') }}
        name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
          packageName: com.expidusos.file_manager
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: beta
          releaseName: v0.1.0-${{ github.sha }}
      - if: ${{ !github.event.issue.pull_request && startsWith(github.ref, 'refs/tags/') }}
        name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
          packageName: com.expidusos.file_manager
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: production
          releaseName: v${{ github.ref.replace(/\/refs\/tags\//, '') }}
      - if: startsWith(github.ref, 'refs/tags/')
        name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/app/outputs/flutter-apk/app-release.apk
  linux:
    strategy:
      matrix:
        arch: [x64]
        channel: [master]
    continue-on-error: true
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-22.08
      options: --privileged
    steps:
      - uses: actions/checkout@v3
      - name: Add dependencies
        run: |
          dnf update -y
          dnf install -y jq cmake ninja-build gtk3-devel clang
          dnf clean all
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{ matrix.channel }}
          architecture: ${{ matrix.arch }}
      - name: Build Flutter
        run: |
          git config --global --add safe.directory /opt/hostedtoolcache/flutter/${{ matrix.channel }}-3.10.2-${{ matrix.arch }}
          flutter config --enable-linux-desktop
          flutter build linux --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          tar -czf com.expidusos.file_manager-linux-${{ matrix.arch }}.tar.gz -C build/linux/${{ matrix.arch }}/release/bundle/ .
      - uses: flatpak/flatpak-github-actions/flatpak-builder@v6.1
        name: Bundle Flatpak
        with:
          bundle: com.expidusos.file_manager.flatpak
          manifest-path: data/com.expidusos.file_manager.yml
          cache-key: flatpak-builder-${{ github.sha }}
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: com.expidusos.file_manager-linux-${{ matrix.arch }}
          path: build/linux/${{ matrix.arch }}/release/bundle/
      - if: startsWith(github.ref, 'refs/tags/')
        name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            com.expidusos.file_manager.flatpak
            com.expidusos.file_manager-linux-${{ matrix.arch }}.tar.gz
  macos:
    strategy:
      matrix:
        arch: [x64]
        channel: [master]
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{ matrix.channel }}
          architecture: ${{ matrix.arch }}
      - run: flutter doctor
      - name: Download dependencies
        run: flutter pub get
      - name: Build desktop
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          find build
  windows:
    strategy:
      matrix:
        arch: [x64]
        channel: [master]
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: ${{ matrix.channel }}
          architecture: ${{ matrix.arch }}
      - run: flutter doctor
      - name: Download dependencies
        run: flutter pub get
      - name: Build desktop
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --build-number $GITHUB_RUN_NUMBER --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          
          pushd build/windows/runner/Release
          7z a ../../../../com.expidusos.file_manager-windows-${{ matrix.arch }}.zip . -r
          popd
      - name: Upload Windows
        uses: actions/upload-artifact@v3
        with:
          name: com.expidusos.file_manager-windows-${{ matrix.arch }}.zip
          path: build/windows/runner/Release
      - if: startsWith(github.ref, 'refs/tags/')
        name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            com.expidusos.file_manager-windows-${{ matrix.arch }}.zip